{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hasan\\\\Desktop\\\\Helsinki_business_college_task\\\\datastructure_santosh\\\\sorting_app\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: \"\",\n      palindrome: \"\"\n    };\n\n    this.inputHandeler = e => {\n      this.setState({\n        data: e.target.value\n      });\n    };\n\n    this.palindrome = () => {\n      if (this.state.data.length === 1 || this.state.data.length === 0) {\n        this.setState({\n          palindrome: \"this is palindrome\"\n        });\n      } else if ( // input abba console.log(\"indefinitely \")\n      this.state.data[0] === this.state.data[this.state.data.length - 1]) {\n        this.palindrome(this.state.data.slice(1, this.state.data.length - 1));\n      } else {\n        this.setState({\n          palindrome: \"this is not palindrome\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Palindrome Checking App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputfield\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            name: \" palindrome \",\n            children: \"Input text to check if it is a palindrome:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"palindrome \",\n            type: \"text\",\n            onChange: this.inputHandeler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.palindrome,\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.palindrome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","App","state","data","palindrome","inputHandeler","e","setState","target","value","length","slice","render"],"sources":["C:/Users/hasan/Desktop/Helsinki_business_college_task/datastructure_santosh/sorting_app/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nexport default class App extends Component {\n  state = { data: \"\", palindrome: \"\" };\n\n  inputHandeler = (e) => {\n    this.setState({ data: e.target.value });\n  };\n  palindrome = () => {\n    if (this.state.data.length === 1 || this.state.data.length === 0) {\n      this.setState({ palindrome: \"this is palindrome\" });\n    } else if (\n      // input abba console.log(\"indefinitely \")\n      this.state.data[0] === this.state.data[this.state.data.length - 1]\n    ) {\n      this.palindrome(this.state.data.slice(1, this.state.data.length - 1));\n    } else {\n      this.setState({ palindrome: \"this is not palindrome\" });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1> Palindrome Checking App</h1>\n        <div className=\"app\">\n          <div className=\"inputfield\">\n            <label name=\" palindrome \">\n              Input text to check if it is a palindrome:\n            </label>\n            <input id=\"palindrome \" type=\"text\" onChange={this.inputHandeler} />\n            <button onClick={this.palindrome}>Check</button>\n          </div>\n          <div>{this.state.palindrome}</div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;;AAEA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;EAAA;IAAA;IAAA,KACzCE,KADyC,GACjC;MAAEC,IAAI,EAAE,EAAR;MAAYC,UAAU,EAAE;IAAxB,CADiC;;IAAA,KAGzCC,aAHyC,GAGxBC,CAAD,IAAO;MACrB,KAAKC,QAAL,CAAc;QAAEJ,IAAI,EAAEG,CAAC,CAACE,MAAF,CAASC;MAAjB,CAAd;IACD,CALwC;;IAAA,KAMzCL,UANyC,GAM5B,MAAM;MACjB,IAAI,KAAKF,KAAL,CAAWC,IAAX,CAAgBO,MAAhB,KAA2B,CAA3B,IAAgC,KAAKR,KAAL,CAAWC,IAAX,CAAgBO,MAAhB,KAA2B,CAA/D,EAAkE;QAChE,KAAKH,QAAL,CAAc;UAAEH,UAAU,EAAE;QAAd,CAAd;MACD,CAFD,MAEO,KACL;MACA,KAAKF,KAAL,CAAWC,IAAX,CAAgB,CAAhB,MAAuB,KAAKD,KAAL,CAAWC,IAAX,CAAgB,KAAKD,KAAL,CAAWC,IAAX,CAAgBO,MAAhB,GAAyB,CAAzC,CAFlB,EAGL;QACA,KAAKN,UAAL,CAAgB,KAAKF,KAAL,CAAWC,IAAX,CAAgBQ,KAAhB,CAAsB,CAAtB,EAAyB,KAAKT,KAAL,CAAWC,IAAX,CAAgBO,MAAhB,GAAyB,CAAlD,CAAhB;MACD,CALM,MAKA;QACL,KAAKH,QAAL,CAAc;UAAEH,UAAU,EAAE;QAAd,CAAd;MACD;IACF,CAjBwC;EAAA;;EAmBzCQ,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,KAAf;QAAA,wBACE;UAAK,SAAS,EAAC,YAAf;UAAA,wBACE;YAAO,IAAI,EAAC,cAAZ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAIE;YAAO,EAAE,EAAC,aAAV;YAAwB,IAAI,EAAC,MAA7B;YAAoC,QAAQ,EAAE,KAAKP;UAAnD;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE;YAAQ,OAAO,EAAE,KAAKD,UAAtB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAQE;UAAA,UAAM,KAAKF,KAAL,CAAWE;QAAjB;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAeD;;AAnCwC"},"metadata":{},"sourceType":"module"}